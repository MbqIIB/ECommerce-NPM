FROM appdynamics/ecommerce-java:oracle-java7

# set timezone to UTC
RUN mv /etc/localtime /etc/localtime.bak
RUN ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime

# Install Gradle
RUN curl -O http://downloads.gradle.org/distributions/gradle-2.12-bin.zip
RUN unzip gradle-2.12-bin.zip -d /opt/
RUN rm gradle-2.12-bin.zip
ENV GRADLE_HOME /opt/gradle-2.12
ENV PATH $PATH:$GRADLE_HOME/bin

# Copy ECommerce-Java project from build dir
ADD ECommerce-Java /ECommerce-Java

# Gradle build
RUN cd /ECommerce-Java;gradle war uberJar;

# Environment vars: Tomcat
ENV TOMCAT_MAJOR_VERSION 8
ENV TOMCAT_MINOR_VERSION 8.0.14
ENV CATALINA_HOME /tomcat

# Environment settings for startup scripts
ADD env.sh /
RUN chmod +x /env.sh

# Install Tomcat
RUN curl -O -k https://archive.apache.org/dist/tomcat/tomcat-${TOMCAT_MAJOR_VERSION}/v${TOMCAT_MINOR_VERSION}/bin/apache-tomcat-${TOMCAT_MINOR_VERSION}.tar.gz \
    && curl -O -k https://archive.apache.org/dist/tomcat/tomcat-${TOMCAT_MAJOR_VERSION}/v${TOMCAT_MINOR_VERSION}/bin/apache-tomcat-${TOMCAT_MINOR_VERSION}.tar.gz.md5 \
    && md5sum apache-tomcat-${TOMCAT_MINOR_VERSION}.tar.gz.md5 \
    && tar zxf apache-tomcat-*.tar.gz \
    && rm apache-tomcat-*.tar.gz* \
    && mv apache-tomcat-${TOMCAT_MINOR_VERSION} tomcat
RUN cd ${CATALINA_HOME}/bin;chmod +x *.sh

# App Server Agent Install
ADD AppServerAgent.zip /
RUN unzip -q /AppServerAgent.zip -d ${CATALINA_HOME}/appagent;rm AppServerAgent.zip

#NPM DS support has been added 
ADD npm-ds.zip /
RUN k='find tomcat/appagent -maxdepth 1 -type d -name "ver*" | sed "s:^tomcat/appagent/::"'
RUN unzip -q /npm-ds.zip -d /tomcat/appagent/$k/external-services/
RUN sed -i "s/127.0.0.1/${IP_ADDRES}/g" /tomcat/appagent/$k/external-services/npm/npm-service.properties

# (Placeholder - build script will update with zip/rpm directives)
# Machine Agent Install

# (Placeholder - build script will update for analytics-agent install)
# Analytics Agent Install

# Machine Agent scripts for Run Book Automation
ADD increase-pool.sh ${MACHINE_AGENT_HOME}/local-scripts/
ADD shrink-pool.sh ${MACHINE_AGENT_HOME}/local-scripts/
RUN chmod +x ${MACHINE_AGENT_HOME}/local-scripts/*.sh

# Analytics config
ADD ecommerce-log4j.job ${MACHINE_AGENT_HOME}/monitors/analytics-agent/conf/job/
ADD configAnalytics.sh /

# Startup scripts
ADD startup.sh /
RUN version=`find ${CATALINA_HOME}/appagent -maxdepth 1 -type d -name "ver*" | sed "s:^${CATALINA_HOME}/appagent/::"`; \
    sed -e "s:_VERSION_STRING:$version:g" env.sh > env.sh.tmp && mv env.sh.tmp env.sh
ADD start-machine-agent.sh /
ADD start-appserver-agent.sh /
ADD app-agent-config-dbcam.xml /

RUN chmod +x /startup.sh
RUN chmod +x /start-machine-agent.sh
RUN chmod +x /start-appserver-agent.sh
RUN chmod +x /configAnalytics.sh

WORKDIR /

# Note: This command should not return or the container will exit
CMD "/startup.sh"

EXPOSE 80
EXPOSE 8080
EXPOSE 8009
